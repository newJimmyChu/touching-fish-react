// @ts-ignore
import React, { useEffect, useRef, useState } from "react";
import ReactWordcloud from "react-wordcloud";

import "tippy.js/dist/tippy.css";
import "tippy.js/animations/scale.css";

import words from "./words";
import WordCloud2 from "wordcloud";
import { connect, useStore } from "react-redux";
import IWordCloudOptions from "../../data-structure/WordCloudOptions";

// const options: any = {
//   gridSize: 2,
//   weightFactor: 10,
//   fontFamily: "Hiragino Mincho Pro, serif",
//   // color: "random-dark",
//   //backgroundColor: "#a0a0a0",
//   // rotateRatio: 1,
//   rotationSteps: 2,
//   ellipticity: 1,
//   list: words,
//
// };

const WordCloudCustom = (props: any) => {
  const wordCloudRef = useRef<HTMLCanvasElement>(null);
  const [options, setOptions] = useState({
    gridSize: 2,
    weightFactor: 10,
    fontFamily: "Hiragino Mincho Pro, serif",
    color: "random-dark",
    rotateRatio: 0,
    rotationSteps: 2,
    ellipticity: 1,
    list: words,
    shape: function (theta: any) {
      var max = 421;
      var leng = [
        254,
        255,
        256,
        257,
        258,
        258,
        259,
        260,
        261,
        262,
        263,
        263,
        264,
        266,
        267,
        268,
        269,
        270,
        271,
        272,
        274,
        275,
        275,
        277,
        277,
        278,
        280,
        282,
        283,
        283,
        285,
        286,
        287,
        288,
        289,
        291,
        292,
        293,
        295,
        297,
        298,
        299,
        301,
        302,
        303,
        305,
        306,
        307,
        312,
        328,
        342,
        357,
        367,
        378,
        388,
        398,
        393,
        378,
        364,
        354,
        345,
        338,
        330,
        326,
        371,
        385,
        396,
        405,
        414,
        421,
        405,
        389,
        379,
        368,
        360,
        353,
        346,
        341,
        336,
        333,
        334,
        333,
        333,
        333,
        334,
        333,
        332,
        333,
        332,
        332,
        331,
        330,
        330,
        330,
        329,
        329,
        328,
        327,
        327,
        326,
        325,
        324,
        323,
        322,
        321,
        320,
        319,
        318,
        316,
        301,
        300,
        298,
        297,
        294,
        292,
        290,
        288,
        286,
        284,
        281,
        279,
        278,
        275,
        272,
        270,
        268,
        265,
        262,
        260,
        256,
        254,
        250,
        248,
        244,
        241,
        239,
        235,
        232,
        229,
        224,
        220,
        217,
        212,
        209,
        206,
        201,
        197,
        192,
        187,
        181,
        174,
        169,
        107,
        107,
        107,
        107,
        107,
        107,
        107,
        107,
        108,
        108,
        109,
        109,
        109,
        109,
        109,
        109,
        110,
        110,
        110,
        110,
        111,
        112,
        112,
        113,
        113,
        114,
        115,
        115,
        115,
        116,
        116,
        117,
        118,
        119,
        119,
        119,
        120,
        120,
        122,
        123,
        123,
        125,
        126,
        126,
        128,
        129,
        129,
        130,
        131,
        133,
        135,
        136,
        136,
        138,
        139,
        140,
        142,
        145,
        146,
        148,
        149,
        151,
        154,
        155,
        158,
        160,
        163,
        166,
        167,
        171,
        174,
        177,
        180,
        185,
        188,
        194,
        197,
        202,
        209,
        217,
        224,
        234,
        246,
        261,
        291,
        387,
        387,
        385,
        384,
        383,
        382,
        381,
        378,
        378,
        375,
        374,
        372,
        370,
        369,
        367,
        365,
        363,
        361,
        358,
        356,
        353,
        350,
        348,
        344,
        342,
        340,
        336,
        332,
        329,
        325,
        323,
        318,
        315,
        311,
        306,
        302,
        296,
        292,
        286,
        280,
        274,
        267,
        261,
        265,
        325,
        324,
        322,
        322,
        321,
        319,
        318,
        317,
        316,
        315,
        313,
        311,
        311,
        308,
        307,
        306,
        304,
        302,
        301,
        299,
        297,
        295,
        293,
        292,
        289,
        287,
        285,
        282,
        281,
        278,
        275,
        274,
        270,
        269,
        265,
        262,
        260,
        257,
        254,
        251,
        248,
        245,
        242,
        240,
        236,
        232,
        230,
        225,
        223,
        218,
        215,
        211,
        270,
        270,
        269,
        269,
        268,
        268,
        267,
        267,
        265,
        265,
        264,
        264,
        263,
        262,
        261,
        261,
        260,
        259,
        258,
        257,
        256,
        255,
        255,
        254,
        253,
        252,
        251,
        250,
        249,
        247,
        246,
        246,
        244,
        243,
        241,
        239,
        239,
        238,
        236,
        235,
        234,
        232,
        231,
        230,
        229,
        226,
        225,
        223,
        223,
        221,
        219,
        218,
        216,
        214,
        213,
        211,
        209,
        208,
        207,
        348,
        346,
        345,
        343,
        342,
        339,
        338,
        337,
        336,
        333,
        332,
        331,
        329,
        327,
        326,
        324,
        322,
        321,
        319,
        318,
        317,
        315,
        313,
        312,
        310,
        309,
        307,
        306,
        304,
        303,
        302,
        300,
        299,
        298,
        297,
        296,
        295,
        294,
        292,
        291,
        289,
        288,
        287,
        286,
        284,
        283,
        283,
        281,
        279,
        279,
        278,
        277,
        275,
        275,
        274,
        273,
        272,
        271,
        270,
        269,
        268,
        267,
        265,
        265,
        264,
        264,
        263,
        262,
        261,
        261,
        259,
        259,
        258,
        257,
        256,
        255,
        255,
        253,
        253,
        252,
        251,
        251,
        249,
        250,
        248,
        247,
        248,
        247,
        245,
        245,
        244,
        244,
        243,
        243,
        242,
        242,
        241,
        240,
        240,
        239,
        239,
        239,
        237,
        238,
        237,
        237,
        236,
        236,
        235,
        235,
        235,
        234,
        234,
        233,
        233,
        232,
        232,
        231,
        231,
        230,
        231,
        230,
        230,
        230,
        230,
        229,
        229,
        228,
        228,
        228,
        228,
        227,
        227,
        227,
        227,
        227,
        227,
        226,
        227,
        226,
        227,
        226,
        226,
        226,
        226,
        226,
        225,
        226,
        225,
        225,
        224,
        225,
        225,
        225,
        225,
        225,
        226,
        225,
        226,
        225,
        226,
        225,
        226,
        226,
        226,
        226,
        226,
        227,
        226,
        226,
        226,
        227,
        228,
        227,
        227,
        228,
        228,
        228,
        228,
        229,
        229,
        229,
        229,
        230,
        230,
        230,
        231,
        231,
        231,
        231,
        231,
        233,
        233,
        233,
        233,
        234,
        234,
        234,
        236,
        236,
        236,
        237,
        237,
        238,
        238,
        238,
        240,
        239,
        240,
        241,
        242,
        242,
        242,
        243,
        245,
        244,
        245,
        247,
        247,
        247,
        248,
        249,
        250,
        251,
        252,
        253,
        253,
        256,
      ];

      return leng[((theta / (2 * Math.PI)) * leng.length) | 0] / max;
    },
  });
  const { wordCloudOptions, wordList } = props;

  const updateOptions = (newOptions: IWordCloudOptions) => {
    // const retOptions = { ...originOptions, newOptions };
    const retOptions = { ...options };
    retOptions.color = newOptions.lightColor
      ? "random-light"
      : newOptions.darkColor
      ? "random-dark"
      : newOptions.fontColor;
    retOptions.fontFamily = newOptions.fontFamily;
    retOptions.weightFactor = newOptions.weightFactor;
    return retOptions;
  };

  useEffect(() => {
    const { current } = wordCloudRef;
    WordCloud2(current as any, options);
  }, []);

  useEffect(() => {
    if (wordList !== undefined && Object.keys(wordList).length !== 0) {
      const newOptions = { ...options };
      newOptions.list = wordList;
      console.log(newOptions);
      setOptions(newOptions);
    }
  }, [wordList]);

  useEffect(() => {
    setOptions(updateOptions(wordCloudOptions));
  }, [wordCloudOptions]);

  useEffect(() => {
    const { current } = wordCloudRef;
    console.log(options);
    WordCloud2(current as any, options);
  }, [options]);

  return (
    <div>
      <div>
        <canvas height="650" width="1000" ref={wordCloudRef}></canvas>
      </div>
    </div>
  );
};

const mapStateToProps = (state: any) => {
  return {
    wordCloudOptions: state.wordCloud.wordCloudOptions,
    wordList: state.wordCloud.wordList,
  };
};

export default connect(mapStateToProps, null)(WordCloudCustom);
